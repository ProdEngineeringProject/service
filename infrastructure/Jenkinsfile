pipeline {
    agent any
    tools {
        jdk 'jdk-21'
    }

    environment {
        DOCKER_PASSWORD = credentials("docker_password")
        GITHUB_TOKEN = credentials("github_token")
        GITHUB_REPO = "ProdEngineeringProject/service.git"
        DOCKER_IMAGE = "hello-img"
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
            steps {
                script {
                    sh([script: 'git fetch --tags', returnStdout: true]).trim()
                    def TAGS = sh([script: 'git tag', returnStdout: true]).trim()
                    echo ${TAGS}
                    def MAJOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true]).trim()
                    def MINOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true]).trim()
                    def PATCH_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true]).trim()
                    def NEW_MINOR_VERSION = MINOR_VERSION.toInteger() + 1
                    env.IMAGE_TAG = "$MAJOR_VERSION.$NEW_MINOR_VERSION.$PATCH_VERSION"
                }
                sh "docker build -t $DOCKER_PASSWORD_USR/$DOCKER_IMAGE:$IMAGE_TAG ."
            }
        }

        stage('Publish image') {
            steps {
                sh('echo "$DOCKER_PASSWORD_PSW" | docker login -u $DOCKER_PASSWORD_USR --password-stdin')
                sh "docker push $DOCKER_PASSWORD_USR/$DOCKER_IMAGE:$IMAGE_TAG"
                sh "git tag $IMAGE_TAG"
                sh('git push https://$GITHUB_TOKEN@github.com/$GITHUB_REPO $IMAGE_TAG')
            }
        }
    }
}
