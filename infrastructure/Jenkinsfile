def IMAGE_VERSION

pipeline {
    agent any
    tools {
        jdk 'jdk-21'
    }

    environment {
        DOCKER_PASSWORD = credentials("docker_password")
        DOCKER_IMAGE = "hello-img"
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
            steps {
                script {
                    def GIT_TAG = sh([script: 'git fetch --tag && git tag', returnStdout: true]).trim()
                    def MAJOR_VERSION = sh([script: 'git tag | cut -d . -f 1', returnStdout: true]).trim()
                    def MINOR_VERSION = sh([script: 'git tag | cut -d . -f 2', returnStdout: true]).trim()
                    def PATCH_VERSION = sh([script: 'git tag | cut -d . -f 3', returnStdout: true]).trim()
                    def NEW_MINOR_VERSION = MINOR_VERSION.toInteger() + 1
                    IMAGE_VERSION = "$MAJOR_VERSION.$NEW_MINOR_VERSION.$PATCH_VERSION"
                }
                sh "docker build -t $DOCKER_PASSWORD_USR/$DOCKER_IMAGE:$IMAGE_VERSION ."
            }
        }

        stage('Publish image') {
            steps {
                sh('echo "$DOCKER_PASSWORD_PSW" | docker login -u $DOCKER_PASSWORD_USR --password-stdin')
                sh "docker push $DOCKER_PASSWORD_USR/$DOCKER_IMAGE:$IMAGE_VERSION"
            }
        }
    }
}
